package com.opensimulationplatform.core.validation.variablegroup.$PACKAGE_NAME$;

import com.opensimulationplatform.core.model.modeldescription.variablegroup.$PACKAGE_NAME$.$CORE_MODEL_CLASS_NAME$;
import com.opensimulationplatform.core.owlconfig.OWLConfig;
import com.opensimulationplatform.core.validation.ValidationError;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLNamedIndividual;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static com.opensimulationplatform.gen.owl.model.OntologyClasses.$CLASS_NAME$;

public class $CLASS_NAME$ extends ValidationError<$CORE_MODEL_CLASS_NAME$> {
  @Override
  protected List<$CORE_MODEL_CLASS_NAME$> getInvalidObjects() {
    OWLConfig config = this.context.getOwlConfig();
    OWLClass validationErrorClass = config.dataFactory.getOWLClass($CLASS_NAME$, config.prefixManager);
    Stream<OWLNamedIndividual> invalidIndividuals = config.reasoner.getInstances(validationErrorClass, false).getFlattened().stream();
    return invalidIndividuals.map(individual -> ($CORE_MODEL_CLASS_NAME$) config.getVariableGroup(individual)).collect(Collectors.toList());
  }

  @Override
  protected String getErrorMessage($CORE_MODEL_CLASS_NAME$ $CORE_MODEL_CLASS_NAME_CAMEL_CASE$) {
     return "$CORE_MODEL_CLASS_NAME$ '" + $CORE_MODEL_CLASS_NAME_CAMEL_CASE$.getName().get() + "' contains incompatible $EFFORT_CORE_MODEL_CLASS_NAME$(" +
             $CORE_MODEL_CLASS_NAME_CAMEL_CASE$.get$EFFORT_CORE_MODEL_CLASS_NAME$().getName().get() + ") and $FLOW_CORE_MODEL_CLASS_NAME$(" +
             $CORE_MODEL_CLASS_NAME_CAMEL_CASE$.get$FLOW_CORE_MODEL_CLASS_NAME$().getName().get() + "). " +
             "The variables in the $EFFORT_CORE_MODEL_CLASS_NAME$ variable group must have opposite causality of the variables in the $FLOW_CORE_MODEL_CLASS_NAME$ variable group";
  }
}
